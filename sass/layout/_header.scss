

.header {
    height: 85vh;
    background-image: linear-gradient(
       to right bottom,
     rgba($color-primary-light, 0.801), 
     rgba($color-primary-dark, 0.801)), 
     url(../img/hero-small.jpg);
    background-size: cover;
    background-position: center; /* ensures that the center stays the same but bottom and top will crop as the width shrinks. */
    position: relative;
    
    @supports (-webkit-clip-path: polygon(0 0)) or (clip-path: polygon(0 0)) {
        height: 95vh;
        -webkit-clip-path: polygon(0 0, 100% 0, 100% 75vh, 0 100%);    
        clip-path: polygon(0 0, 100% 0, 100% 75vh, 0 100%);
    }

    // resolution for Apple high resolution screens. Apply code if 192 AND min-wdith of 600px+ OR width is 2000px+
    @media (min-resolution: 192dpi) and (min-width: 37.5em),
           (-webkit-min-device-pixel-ratio: 2) and (min-width: 37.5em), // this one is for safari to utilize the property
           (min-width: 125em) {
        background-image: linear-gradient(
            to right bottom,
          rgba($color-primary-light, 0.801), 
          rgba($color-primary-dark, 0.801)), 
         url(../img/hero.jpg);
    }


    @include respond(phone) {
        -webkit-clip-path: polygon(0 0, 100% 0, 100% 85vh, 0 100%);    
        clip-path: polygon(0 0, 100% 0, 100% 85vh, 0 100%);
    }

    &__logo-box {
        position: absolute;
        top: 4rem;
        left: 4rem;
    }

    &__logo {
        height: 3.5rem;    
    }

    &__text-box {
        position: absolute; /* absolute within it's parent */
        top: 40%; /* the box element's starting y-axis point (which is the top edge of the box element) is now at 50% of the parent's height - but we still need to center the box element at the specified x,y point. */
        left: 50%; /* the box element's starting x-axis point (which is the left edge of the box element) is now at 50% of the parent's width - but we still need to center the box element at the specified x,y point. */
        transform: translate(-50%, -50%); /* this will shift our box element left and up by 50% of it's width and height - this will center the box at the x,y point specified by absolute and top/left sibling attributes. */
        text-align: center; /* Makes sure the button element (inline-block [which is treated as text]) to center. */
    }
}
